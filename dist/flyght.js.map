{"mappings":"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","sources":["src/index.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["const Flyght = class {\n    #config = {}\n    #defaultConfig = {}\n    #element = null\n    constructor(config) {\n        this.init(config)\n        this.register()\n    }\n\n    init(config) {\n        this.#config = Object.assign({},this.#defaultConfig,config)\n        let func = this.hashListener.bind(this)\n        window.addEventListener('hashchange',func, false)\n\t\twindow.onload = func\n    }\n\n    register(){\n        this.$ = window.document\n        this.#element = this.#config.idElement ? this.$.getElementById(this.#config.idElement) : this.getContentElement()\n        this.#config.urlConfiguration = this.#config.urlConfiguration ?? [] \n        let $links = this.$.querySelectorAll('a[data-flyght-link]')\n\t\tif($links) $links.forEach(($el,key,$parent) => {\n            $el.addEventListener('click', this.linkClickListener, false)\n            this.#config.urlConfiguration.push({ hash: $el.hash || (`#${$el.name || $el.href}`), url: $el.href, type: 'GET' })\n        })\n    }\n\n    getContentElement(){\n        let $el = document.querySelector('*[data-flyght-content]') ?? document.body\n        this.#config.idElement = $el.id || ( $el.id = `flyghtContent${Math.random()*1000}`)\n        return $el\n    }\n\n    linkClickListener(e) {\n        e.stopPropagation()\n        e.preventDefault()\n        window.location.hash = e.target.hash || `#${e.target.name}` || `#${e.target.href}`\n    }\n\n    get config() {\n        return this.#config\n    }\n\n    async #fetchFetch(url, opts, callback ) {\n        let response = await fetch(url, Object.assign({},{ method: 'GET', headers: {\n            'Content-Type':'text/html',\n            'Accept':'text/html'\n        } }, opts))\n        response = await (callback? callback(response) : response.text())\n        if(!response) throw 'No text value returned'\n        \n        this.updateContent(response)\n    }\n\n    hashListener() {\n        try {\n            let page = this.#config.urlConfiguration.filter((page) => page.hash == window.location.hash || page.url == window.location.href)\n            if(page.length < 1) return false\n            \n            let { url, beforeFetch } = page = page.shift()\n            if(!url) throw \"No URL provided!\"\n            else if((typeof beforeFetch === 'function') && (!(page = beforeFetch(page))) ) return false\n            \n            let { type, options, afterFetch } = page\n            this.#fetchFetch(url, { method: type, ...options }, afterFetch || false )\n        } catch(e) {\n            this.errorHandler(e)\n        }\n    }\n\n    errorHandler(e) {\n        console.error(e)\n    }\n\n    updateContent(content) {\n        this.#element.innerHTML = content\n    }\n}\n\nexport default global.Flyght = Flyght","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["parcelHelpers","require","Flyght","config","defaultConfig","element","constructor","this","init","register","Object","assign","func","hashListener","bind","window","addEventListener","onload","$","document","idElement","getElementById","getContentElement","urlConfiguration","$links","querySelectorAll","forEach","$el","key","$parent","linkClickListener","push","hash","name","href","url","type","querySelector","body","id","Math","random","e","stopPropagation","preventDefault","location","target","async","opts","callback","response","fetch","method","headers","Accept","text","updateContent","page","filter","length","beforeFetch","shift","options","afterFetch","fetchFetch","errorHandler","console","error","content","innerHTML","global","exports","interopDefault","a","__esModule","default","defineInteropFlag","defineProperty","value","exportAll","source","dest","keys","hasOwnProperty","enumerable","get","export","destName"],"version":3,"file":"flyght.js.map"}